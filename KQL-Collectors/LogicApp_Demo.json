{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "triggers": {
            "Recurrence": {
                "recurrence": {
                    "interval": 1,
                    "frequency": "Day"
                },
                "evaluatedRecurrence": {
                    "interval": 1,
                    "frequency": "Day"
                },
                "type": "Recurrence"
            }
        },
        "actions": {
            "Get_AppRegistration_Values": {
                "actions": {},
                "runAfter": {
                    "Initialize_variables_1": [
                        "Succeeded"
                    ]
                },
                "type": "Scope"
            },
            "Initialize_variables": {
                "runAfter": {},
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "Token",
                            "type": "string",
                            "value": " "
                        }
                    ]
                }
            },
            "Initialize_variables_1": {
                "runAfter": {
                    "Initialize_variables": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "Org",
                            "type": "string"
                        }
                    ]
                }
            },
            "Token_Generation": {
                "actions": {
                    "HTTP_Token": {
                        "type": "Http",
                        "inputs": {
                            "uri": "https://login.microsoftonline.com/(TenantIDValue)/oauth2/v2.0/token",
                            "method": "POST",
                            "headers": {
                                "Host": "login.microsoftonline.com",
                                "Content-type": "application/x-www-form-urlencoded"
                            },
                            "body": "client_id=(AppRegistrationID)\n&scope=https://graph.microsoft.com/.default\n&client_secret=(APPScecretID)\n&grant_type=client_credentials"
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        }
                    },
                    "Parse_JSON_(Token)": {
                        "runAfter": {
                            "HTTP_Token": [
                                "Succeeded"
                            ]
                        },
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@body('HTTP_Token')",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token_type": {
                                        "type": "string"
                                    },
                                    "expires_in": {
                                        "type": "integer"
                                    },
                                    "ext_expires_in": {
                                        "type": "integer"
                                    },
                                    "access_token": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "runtimeConfiguration": {
                            "secureData": {
                                "properties": [
                                    "inputs"
                                ]
                            }
                        }
                    },
                    "Set_variable_Token": {
                        "runAfter": {
                            "Parse_JSON_(Token)": [
                                "Succeeded"
                            ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                            "name": "Token",
                            "value": "@body('Parse_JSON_(Token)')?['access_token']"
                        }
                    }
                },
                "runAfter": {
                    "Get_AppRegistration_Values": [
                        "Succeeded"
                    ]
                },
                "type": "Scope"
            },
            "KQL_Collectors_+_MISP_Integration": {
                "actions": {
                    "KQL_Collector_-_IP01-_Password_Spray_Attack": {
                        "actions": {
                            "KQL_Query_MaliciousIP_related_to_Password_Spray": {
                                "type": "Http",
                                "inputs": {
                                    "uri": "https://graph.microsoft.com/v1.0/security/runHuntingQuery",
                                    "method": "POST",
                                    "headers": {
                                        "Authorization": "Bearer @{variables('Token')}",
                                        "Content-type": "application/json"
                                    },
                                    "body": {
                                        "Query": " let Malicious_IP_iOC = AlertEvidence |where Timestamp > ago(30d) | where Title contains 'Malicious IP Address' | extend parsed = parse_json(AdditionalFields) | extend Address = tostring(parsed.Address), Type = tostring(parsed.Type), Role = tostring(parsed.Role), MergeByKey = tostring(parsed.MergeByKey), MergeByKeyHex= tostring(parsed.MergeByKeyHex), CountryCode = tostring(parsed.Location.CountryCode), State = tostring(parsed.Location.State), City = tostring(parsed.Location.City), Longitude = todouble(parsed.Location.Longitude), Latitude = todouble(parsed.Location.Latitude), ASN = tostring(parsed.Location.Asn) | extend Time_ = format_datetime( Timestamp, 'dd-MM-yyyy'); AlertEvidence | extend parsed = parse_json(AdditionalFields) | extend Address = tostring(parsed.Address), Type = tostring(parsed.Type), Role = tostring(parsed.Role), MergeByKey = tostring(parsed.MergeByKey), MergeByKeyHex= tostring(parsed.MergeByKeyHex), CountryCode = tostring(parsed.Location.CountryCode),State = tostring(parsed.Location.State), City = tostring(parsed.Location.City), Longitude = todouble(parsed.Location.Longitude), Latitude = todouble(parsed.Location.Latitude), ASN = tostring(parsed.Location.Asn) | extend Time_ = format_datetime( Timestamp, 'dd-MM-yyyy') | join kind=inner (Malicious_IP_iOC) on $left.MergeByKey == $right.MergeByKey | where isnotempty(Address1) and Title contains 'Password Spray' | distinct Time_,Title, Address1, CountryCode | extend rawHash = substring(tostring(hash_sha256(strcat(1, tostring(rand())))), 0, 32) | extend GeneratedUUID = strcat( substring(rawHash, 0, 8), '-', substring(rawHash, 8, 4), '-', substring(rawHash, 12, 4), '-', substring(rawHash, 16, 4), '-', substring(rawHash, 20, 12) ) "
                                    }
                                },
                                "runtimeConfiguration": {
                                    "contentTransfer": {
                                        "transferMode": "Chunked"
                                    }
                                }
                            },
                            "Parse_JSON__MaliciousIP_related_to_Password_Spray": {
                                "runAfter": {
                                    "KQL_Query_MaliciousIP_related_to_Password_Spray": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ParseJson",
                                "inputs": {
                                    "content": "@body('KQL_Query_MaliciousIP_related_to_Password_Spray')",
                                    "schema": {
                                        "type": "object",
                                        "properties": {
                                            "@@odata.context": {
                                                "type": "string"
                                            },
                                            "schema": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "type"
                                                    ]
                                                }
                                            },
                                            "results": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "Time_": {
                                                            "type": "string"
                                                        },
                                                        "Title": {
                                                            "type": "string"
                                                        },
                                                        "Address1": {
                                                            "type": "string"
                                                        },
                                                        "CountryCode": {
                                                            "type": "string"
                                                        },
                                                        "rawHash": {
                                                            "type": "string"
                                                        },
                                                        "GeneratedUUID": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "Time_",
                                                        "Title",
                                                        "Address1",
                                                        "CountryCode",
                                                        "rawHash",
                                                        "GeneratedUUID"
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "For_each_IP_related_to_Password_Spray_add_into_MISP": {
                                "foreach": "@body('Parse_JSON__MaliciousIP_related_to_Password_Spray')?['results']",
                                "actions": {
                                    "Post_Malicious_Malicious_IP_PA_into_SWITCH_MISP_Test_": {
                                        "type": "Http",
                                        "inputs": {
                                            "uri": "http://yourMISPURI",
                                            "method": "POST",
                                            "headers": {
                                                "Authorization": "YourAPIKey",
                                                "Content-Type": "application/json",
                                                "Accept": "application/json"
                                            },
                                            "body": {
                                                "meta_id": "__ms___",
                                                "meta_schema": "msiocs",
                                                "meta_schema_version": 0.1,
                                                "meta_source": "ms",
                                                "tags": [
                                                    "source:DefenderXDR",
                                                    "Incident:PasswordSpray",
                                                    "IOC: IP",
                                                    "PAP:Amber"
                                                ],
                                                "comments": "@{item()?['Time_']} :@{item()?['Title']} : @{item()?['Address1']} ",
                                                "ip": [
                                                    {
                                                        "ioc": "@{item()?['Address1']}"
                                                    }
                                                ],
                                                "meta_systems": [
                                                    "dev"
                                                ],
                                                "meta_uuid": "@{item()?['GeneratedUUID']}"
                                            }
                                        },
                                        "runtimeConfiguration": {
                                            "contentTransfer": {
                                                "transferMode": "Chunked"
                                            }
                                        }
                                    }
                                },
                                "runAfter": {
                                    "Parse_JSON__MaliciousIP_related_to_Password_Spray": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Foreach"
                            }
                        },
                        "type": "Scope"
                    }
                },
                "runAfter": {
                    "Token_Generation": [
                        "Succeeded"
                    ]
                },
                "type": "Scope"
            }
        },
        "outputs": {},
        "parameters": {
            "$connections": {
                "type": "Object",
                "defaultValue": {}
            }
        }
    },
    "parameters": {
        "$connections": {
            "type": "Object",
            "value": {}
        }
    }
}
